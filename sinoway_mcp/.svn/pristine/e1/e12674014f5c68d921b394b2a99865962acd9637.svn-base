<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="FDatExptrnlog" >
  <resultMap id="BaseResultMap" type="com.sinoway.mcp.entity.FDatExptrnlog" >
    <!-- REGID -->
	<id column="REGID" property="regid" jdbcType="VARCHAR" />


    <!-- FNTTRNJRN -->
    <result column="FNTTRNJRN" property="fnttrnjrn" jdbcType="VARCHAR" />
    <!-- 0-原交易 1-子交易 2-产品 -->
    <result column="TRNTYPE" property="trntype" jdbcType="VARCHAR" />
    <!-- TRNDTE -->
    <result column="TRNDTE" property="trndte" jdbcType="VARCHAR" />
    <!-- TRNTIM -->
    <result column="TRNTIM" property="trntim" jdbcType="VARCHAR" />
    <!-- REGDAT -->
    <result column="REGDAT" property="regdat" jdbcType="VARCHAR" />
    <!-- REGTIM -->
    <result column="REGTIM" property="regtim" jdbcType="VARCHAR" />
    <!-- EXPREASON -->
    <result column="EXPREASON" property="expreason" jdbcType="VARCHAR" />

  </resultMap>
  
  <sql id="base_column_list" >
    REGID,
			FNTTRNJRN,
			TRNTYPE,
			TRNDTE,
			TRNTIM,
			REGDAT,
			REGTIM,
			EXPREASON
  </sql>
  
  <sql id="base_column_set_noid">

    <if test="fnttrnjrn != null" >	  FNTTRNJRN = #{fnttrnjrn,jdbcType=VARCHAR},	</if>
    <if test="trntype != null" >	  TRNTYPE = #{trntype,jdbcType=VARCHAR},	</if>
    <if test="trndte != null" >	  TRNDTE = #{trndte,jdbcType=VARCHAR},	</if>
    <if test="trntim != null" >	  TRNTIM = #{trntim,jdbcType=VARCHAR},	</if>
    <if test="regdat != null" >	  REGDAT = #{regdat,jdbcType=VARCHAR},	</if>
    <if test="regtim != null" >	  REGTIM = #{regtim,jdbcType=VARCHAR},	</if>
    <if test="expreason != null" >	  EXPREASON = #{expreason,jdbcType=VARCHAR}	</if>

  </sql>
  
  <sql id="base_column_where">
  	  <where>
		<if test="regid != null" >
		 and REGID = #{regid,jdbcType=VARCHAR}
		</if>


	    <if test="fnttrnjrn != null" >
		  and FNTTRNJRN = #{fnttrnjrn,jdbcType=VARCHAR}
		</if>
	    <if test="trntype != null" >
		  and TRNTYPE = #{trntype,jdbcType=VARCHAR}
		</if>
	    <if test="trndte != null" >
		  and TRNDTE = #{trndte,jdbcType=VARCHAR}
		</if>
	    <if test="trntim != null" >
		  and TRNTIM = #{trntim,jdbcType=VARCHAR}
		</if>
	    <if test="regdat != null" >
		  and REGDAT = #{regdat,jdbcType=VARCHAR}
		</if>
	    <if test="regtim != null" >
		  and REGTIM = #{regtim,jdbcType=VARCHAR}
		</if>
	    <if test="expreason != null" >
		  and EXPREASON = #{expreason,jdbcType=VARCHAR}
		</if>

      </where>
  </sql>
  
  <sql id="order_clause">
  	<if test="orderClause != null">
  		order by ${orderClause}
  	</if>
  </sql>
  
  <select id="countByMap" parameterType="java.util.Map" resultType="java.lang.Integer" >
    select count(*) from F_DAT_EXPTRNLOG
    <include refid="base_column_where"></include>
  </select>
   
  <select id="countByEntity" parameterType="com.sinoway.mcp.entity.FDatExptrnlog" resultType="java.lang.Integer" >
    select count(*) from F_DAT_EXPTRNLOG
    <include refid="base_column_where"></include>
  </select>
  
  <select id="selectByMap" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="base_column_list" />
    from F_DAT_EXPTRNLOG
    <include refid="base_column_where"></include>
  </select>
  
  <select id="selectByEntity" resultMap="BaseResultMap" parameterType="com.sinoway.mcp.entity.FDatExptrnlog" >
    select 
    <include refid="base_column_list" />
    from F_DAT_EXPTRNLOG
    <include refid="base_column_where"></include>
  </select>
  
  <insert id="insertByMap" parameterType="java.util.Map" >
    insert into F_DAT_EXPTRNLOG (REGID,
			FNTTRNJRN,
			TRNTYPE,
			TRNDTE,
			TRNTIM,
			REGDAT,
			REGTIM,
			EXPREASON)
    values (
	#{regid,jdbcType=VARCHAR},


    #{fnttrnjrn,jdbcType=VARCHAR},
    #{trntype,jdbcType=VARCHAR},
    #{trndte,jdbcType=VARCHAR},
    #{trntim,jdbcType=VARCHAR},
    #{regdat,jdbcType=VARCHAR},
    #{regtim,jdbcType=VARCHAR},
    #{expreason,jdbcType=VARCHAR}

    )
  </insert>
  
  <insert id="insertByEntity" parameterType="com.sinoway.mcp.entity.FDatExptrnlog" >
    insert into F_DAT_EXPTRNLOG (REGID,
			FNTTRNJRN,
			TRNTYPE,
			TRNDTE,
			TRNTIM,
			REGDAT,
			REGTIM,
			EXPREASON)
    values (
	#{regid,jdbcType=VARCHAR},


    #{fnttrnjrn,jdbcType=VARCHAR},
    #{trntype,jdbcType=VARCHAR},
    #{trndte,jdbcType=VARCHAR},
    #{trntim,jdbcType=VARCHAR},
    #{regdat,jdbcType=VARCHAR},
    #{regtim,jdbcType=VARCHAR},
    #{expreason,jdbcType=VARCHAR}

    )
  </insert>
  
  <delete id="deleteByMap" parameterType="java.util.Map">
  	delete from F_DAT_EXPTRNLOG
  	<include refid="base_column_where"></include>
  </delete>
  
  <delete id="deleteByEntity" parameterType="com.sinoway.mcp.entity.FDatExptrnlog">
  	delete from F_DAT_EXPTRNLOG 
  	<include refid="base_column_where"></include>
  </delete>
  
  <update id="updateByMap" parameterType="java.util.Map">
  	update F_DAT_EXPTRNLOG 
  	<set> 
     <include refid="base_column_set_noid" />
    </set>
	where
 	REGID = #{regid}

  </update>
  
  <update id="updateByEntity" parameterType="com.sinoway.mcp.entity.FDatExptrnlog">
  	update F_DAT_EXPTRNLOG 
  	<set> 
     <include refid="base_column_set_noid" />
    </set>
    where
 	REGID = #{regid}

  </update>

  <insert id="batchInsert" parameterType="java.util.List">
  	insert into F_DAT_EXPTRNLOG (REGID,
			FNTTRNJRN,
			TRNTYPE,
			TRNDTE,
			TRNTIM,
			REGDAT,
			REGTIM,
			EXPREASON)
   values
   <foreach collection="list" item="item" index="index" separator=",">
   	( 
	#{item.regid,jdbcType=VARCHAR},


    #{item.fnttrnjrn,jdbcType=VARCHAR},
    #{item.trntype,jdbcType=VARCHAR},
    #{item.trndte,jdbcType=VARCHAR},
    #{item.trntim,jdbcType=VARCHAR},
    #{item.regdat,jdbcType=VARCHAR},
    #{item.regtim,jdbcType=VARCHAR},
    #{item.expreason,jdbcType=VARCHAR}

    )
   </foreach>
  </insert>
  
  <delete id="batchDelete" parameterType="java.util.List">
  	delete from F_DAT_EXPTRNLOG 
  	where 
  	REGID

  	in 
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">   
		 #{item.regid,jdbcType=VARCHAR}

    </foreach>
  </delete>
  
  <update id="batchUpdate" parameterType="java.util.List">
  
  </update>
  
</mapper>
