package com.sinoway.mcp.service.yimei.task;

public class TestQueue implements Runnable {

private BlockingQueue<File> queue;
private String keyword;

public SearchTask(BlockingQueue<File> queue, String keyword) {

this.queue = queue;

this.keyword = keyword;

}
public void run() {

try {
boolean done = false;
while (!done) {

　　//取出队首元素，如果队列为空，则阻塞

　　File file = queue.take();

　　if (file == FileEnumerationTask.DUMMY) {

　　//取出来后重新放入，好让其他线程读到它时也很快的结束

　　queue.put(file);

　　done = true;

　　} else

　　search(file);

　　}

　　} catch (IOException e) {

　　e.printStackTrace();

　　} catch (InterruptedException e) {

　　}

　　}

　　public void search(File file) throws IOException {

　　Scanner in = new Scanner(new FileInputStream(file));

　　int lineNumber = 0;

　　while (in.hasNextLine()) {

　　lineNumber++;

　　String line = in.nextLine();

　　if (line.contains(keyword))

　　System.out.printf("%s:%d:%s%n", file.getPath(), lineNumber,

　　line);

　　}	

　　in.close();

　　}

　　}


}
