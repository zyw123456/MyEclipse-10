
package org.tempuri;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3-hudson-390-
 * Generated source version: 2.0
 * 
 */
@WebService(name = "HD_GetAccess_TokenSoap", targetNamespace = "http://tempuri.org/")
public interface HDGetAccessTokenSoap {


    /**
     * 获取ACCESS_TOKEN凭证
     * 
     * @param key
     * @param appSecret
     * @param appID
     * @return
     *     returns javax.xml.ws.Response<org.tempuri.GetACCESSTOKENResponse>
     */
    @WebMethod(operationName = "GetACCESS_TOKEN", action = "http://tempuri.org/GetACCESS_TOKEN")
    @RequestWrapper(localName = "GetACCESS_TOKEN", targetNamespace = "http://tempuri.org/", className = "org.tempuri.GetACCESSTOKEN")
    @ResponseWrapper(localName = "GetACCESS_TOKENResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.GetACCESSTOKENResponse")
    public Response<GetACCESSTOKENResponse> getACCESSTOKENAsync(
        @WebParam(name = "AppID", targetNamespace = "http://tempuri.org/")
        String appID,
        @WebParam(name = "AppSecret", targetNamespace = "http://tempuri.org/")
        String appSecret,
        @WebParam(name = "Key", targetNamespace = "http://tempuri.org/")
        String key);

    /**
     * 获取ACCESS_TOKEN凭证
     * 
     * @param asyncHandler
     * @param key
     * @param appSecret
     * @param appID
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "GetACCESS_TOKEN", action = "http://tempuri.org/GetACCESS_TOKEN")
    @RequestWrapper(localName = "GetACCESS_TOKEN", targetNamespace = "http://tempuri.org/", className = "org.tempuri.GetACCESSTOKEN")
    @ResponseWrapper(localName = "GetACCESS_TOKENResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.GetACCESSTOKENResponse")
    public Future<?> getACCESSTOKENAsync(
        @WebParam(name = "AppID", targetNamespace = "http://tempuri.org/")
        String appID,
        @WebParam(name = "AppSecret", targetNamespace = "http://tempuri.org/")
        String appSecret,
        @WebParam(name = "Key", targetNamespace = "http://tempuri.org/")
        String key,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetACCESSTOKENResponse> asyncHandler);

    /**
     * 获取ACCESS_TOKEN凭证
     * 
     * @param key
     * @param appSecret
     * @param appID
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetACCESS_TOKEN", action = "http://tempuri.org/GetACCESS_TOKEN")
    @WebResult(name = "GetACCESS_TOKENResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetACCESS_TOKEN", targetNamespace = "http://tempuri.org/", className = "org.tempuri.GetACCESSTOKEN")
    @ResponseWrapper(localName = "GetACCESS_TOKENResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.GetACCESSTOKENResponse")
    public String getACCESSTOKEN(
        @WebParam(name = "AppID", targetNamespace = "http://tempuri.org/")
        String appID,
        @WebParam(name = "AppSecret", targetNamespace = "http://tempuri.org/")
        String appSecret,
        @WebParam(name = "Key", targetNamespace = "http://tempuri.org/")
        String key);

}
